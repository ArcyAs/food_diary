@model FoodDiary.Controllers.ProductViewModel

@{
    ViewData["Title"] = "Products list";
}

<h1>@ViewData["Title"]</h1>
<br/>
<p>
    <a asp-controller="Products" asp-action="Add">Create New Product</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            Name
        </th>
        <th>
            Proteins
        </th>
        <th>
            Carb
        </th>
        <th>
            Fat
        </th>
        <th>
            Kcal
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.ProductEntities)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Protein)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Carb)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fat)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kcal)
            </td>
            @if (Model.DiaryId != Guid.Empty)
            {
                <td>
                    @Html.TextBoxFor(p => item.Weight)
                </td>
            }
            else
            {
                <td>100</td>
            }

            <td>
                @if (Model.DiaryId != Guid.Empty)
                {
                    <a asp-controller="Diary" asp-action="Add" asp-route-diaryId="@Model.DiaryId" asp-route-productId="@item.Id" asp-route-productWeight="@item.Weight">Add To Diary</a>
                }
                <a asp-controller="Products" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-controller="Products" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>